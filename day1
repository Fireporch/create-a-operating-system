跟着教程录入一个一二进制编译脚本，不知所云
遇到操作系统并无法兼容
通过另一个接口运行调用了他给的另一个模拟器dfimage0.bin，然后打开make.exe


%%%%刚才的操作具体含义：
cpu只能识别二进制文件，我们通过定义让cpu识别0/1处理数据，cpu还能处理电信号，机器语言最终就是以电信号形式法搜上那个给cpu的
软盘也是将磁极的n s转化为0/1
bat类型文件跟cmd指令一样，通过cmd命令行实现对helloos等文件的调用，编译二进制文件实现操作

编译二进制文件快捷指令
db文件写入一个字节指令
resb现在开始空出10个位置


标准形式的代码：
；hello_os
；TAB=4
;下面是标注你FAT12格式软盘专用代码

  DB 0xeb，0x4e,0x90
  DB "HELLOIPL";启动区的命令可以会是任意字符串（8字节）
  DW 512； 每个扇区（sector）的大小必须为512字节
  DB 1；簇（cluster）的大小必须为一个扇区
  DW 1；FAT的起始位置一般从第一个扇区开始
  DB 2;FAT的个数必须为2
  DW 224;根目录的大小一般设为224项
  DW 2880;该磁盘大小必须是2880
  DB 0xf0;磁盘的种类必须是0xf0
  DW 9;FAT的长度必须是9扇区
  DW 18;1个磁道（track）有几个扇区
  DW 2;磁头数必须是2
  DD 0;不使用分区，必须是0
  DD 2880;重写一次磁盘大小
  DB 0,0,0x29;意义不明，固定
  DD 0xffffffff;可能是卷标号码
  DB 'HELLO-OS"; 磁盘的名称11字节
  DB "FAT12"; 磁盘格式名称8字节
  RESB 18;先空出18字节
  
  
  ;程序主体
    DB 0xb8,0x00,0x00,0x8e,0xd0,0xbc,0x00,0x7c
    DB 0x8e,0xd8,0x8e,0xc0,0xbe,0x74,0x7c,0x8a
    DB 0x04,0x83,0xc6,0x01,0x3c,0x00,0x74,0x09
    DB 0xb4,0x0e,0xbb,0x0f,0x00,0xcd,0x10,0xeb
    DB 0xee,0xf4,0xeb,0xfb
    
   ;信息显示部分
    DB 0x0a,0x0a ;两个换行
    DB "hello,world"
    DB 0x0a;换行
    DB 0
    RESB 0x1fe-$ ;填写0x00,直到0x001fe
    DB 0x55,0xaa
   ;下面是启动区以外部分输出
    DB 0xf0,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00
    RESB 4600
    DB 0xf0,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00
    RESB 1469432
    
 ;DB为ddefine doubleword   32位     
 ;DW为define word   16位
 RESB 0x1fe-$他是一个变量，告诉我这一行字节数，我们在其前面已经输出了132个字节，$即为132,0x1fe-132=378,后面连续输出378个00
 
